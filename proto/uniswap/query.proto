syntax = "proto3";
package roberttrifffin.uniswap.uniswap;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "uniswap/user.proto";
import "uniswap/pool.proto";

option go_package = "github.com/robert-trifffin/uniswap/x/uniswap/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a user by id.
	rpc User(QueryGetUserRequest) returns (QueryGetUserResponse) {
		option (google.api.http).get = "/robert-trifffin/uniswap/uniswap/user/{id}";
	}

	// Queries a list of user items.
	rpc UserAll(QueryAllUserRequest) returns (QueryAllUserResponse) {
		option (google.api.http).get = "/robert-trifffin/uniswap/uniswap/user";
	}


	// Queries a pool by index.
	rpc Pool(QueryGetPoolRequest) returns (QueryGetPoolResponse) {
		option (google.api.http).get = "/robert-trifffin/uniswap/uniswap/pool";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetUserRequest {
	uint64 id = 1;
}

message QueryGetUserResponse {
	User User = 1;
}

message QueryAllUserRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUserResponse {
	repeated User User = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetPoolRequest {}

message QueryGetPoolResponse {
	Pool Pool = 1;
}
